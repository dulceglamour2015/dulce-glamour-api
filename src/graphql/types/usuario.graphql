type Usuario {
  id: ID
  nombre: String
  username: String
  creado: String
  rol: RolUsuario
}

input UsuarioInput {
  nombre: String!
  username: String!
  password: String!
  rol: RolUsuario
}

input AutenticarInput {
  username: String!
  password: String!
}

type Token {
  token: String
}
enum RolUsuario {
  ADMINISTRADOR
  USUARIO
}

extend type Query {
  #Usuarios
  obtenerUsuario: Usuario @hasRole(roles: [ADMINISTRADOR, USUARIO]) @auth
}

extend type Mutation {
  # Usuarios
  nuevoUsuario(id: ID, input: UsuarioInput): Usuario
    @hasRole(roles: [ADMINISTRADOR])
    @auth
  autenticarUsuario(input: AutenticarInput): Token @guest
  logout: Boolean @auth
}
